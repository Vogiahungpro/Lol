-- Roblox Executor Script with Discord Bot API Integration
-- Updated to use v-vep2.onrender.com/api/process structure

if _G.executed then return end
_G.executed = true

repeat task.wait() until game:IsLoaded()

-- Key check
if not _G.EXECUTOR_KEY or _G.EXECUTOR_KEY == "" or _G.EXECUTOR_KEY == "your_key_here" then
    game.Players.LocalPlayer:Kick("❌ Invalid executor key. Please set _G.EXECUTOR_KEY before running this script.\n\nExample:\n_G.EXECUTOR_KEY = \"your_key_here\"\nloadstring(game:HttpGet(\"your_script_url\"))()")
    return
end

-- Services
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Config
local CONFIG = {
    API_BASE = "https://v-vep2.onrender.com/api/process",
    FALLBACK_URLS = {
        "https://v-vep2.onrender.com/api/process"
    },
    ENDPOINTS = {
        STATUS       = "/status",
        VALIDATE_KEY = "/validate-key",
        PROSES       = "/proses",
        USERS        = "/users",
        SYNC         = "/sync",
        LOG          = "/log",
        AUTH         = "/auth",
        SCRIPT       = "/script"
    },
    TIMEOUT = 15000,
    MAX_RETRIES = 3,
    RETRY_DELAY = 1000,
    EXECUTOR_KEY = _G.EXECUTOR_KEY,
    SCRIPT_URL = "https://raw.githubusercontent.com/Vogiahungpro/Lol/refs/heads/main/Lol.wtf%20main",
    GITHUB_FALLBACK = true,
    USER_AGENT = "DiscordKatabump/2.1-Remote",
    AUTO_RETRY = true,
    ENHANCED_LOGGING = true,
    FALLBACK_MODE = true
}

-- Helper to request API
local function apiRequest(endpoint, data)
    local url = CONFIG.API_BASE .. endpoint
    local success, result = pcall(function()
        return game:HttpPost(url, HttpService:JSONEncode(data), Enum.HttpContentType.ApplicationJson)
    end)
    if not success then
        warn("API request failed:", result)
    end
    return success and result or nil
end

-- Validate key
local validation = apiRequest(CONFIG.ENDPOINTS.VALIDATE_KEY, { key = CONFIG.EXECUTOR_KEY })
if not validation then
    player:Kick("❌ Failed to validate key.")
    return
end

-- Log user
apiRequest(CONFIG.ENDPOINTS.LOG, {
    user = player.Name,
    userid = player.UserId,
    gameid = game.PlaceId
})

-- Get script
local scriptData = apiRequest(CONFIG.ENDPOINTS.SCRIPT, { key = CONFIG.EXECUTOR_KEY })
if scriptData then
    local success, err = pcall(function()
        loadstring(scriptData)()
    end)
    if not success then
        warn("Error executing script:", err)
        if CONFIG.GITHUB_FALLBACK then
            loadstring(game:HttpGet(CONFIG.SCRIPT_URL))()
        end
    end
else
    player:Kick("❌ Could not retrieve script.")
end
